<?xml version="1.0" encoding="utf-8"?>

<project name="phingdrupaldistributions" phingVersion="2.10.0" default="usage">
  <target name="usage" depends="init">
    <echo msg="Hello, ${phing.project.name}!"/>
    <!-- TODO: Display some tips on how to use this build script! -->
  </target>

  <!-- Setup drush in order to execute drush tasks. -->
  <target name="setup-drush" depends="init, internal:setup-dirs">
    <!-- TODO: If the user doesn't have drush, or the wrong version of drush
         we could actually use composer to install it. -->

    <!-- Setup the Drush task to make using from Phing easier. -->
    <property name="build.tools.phing.drush.dir" value="${build.tools.dir}/phing-drush" />
    <if>
      <not><available type="dir" file="${build.tools.phing.drush.dir}"/></not>
      <then>
        <gitclone
          repository="${build.tools.phing.drush.repository.url}"
          targetPath="${build.tools.phing.drush.dir}" />
        <gitcheckout
          repository="${build.tools.phing.drush.dir}"
          branchname="${build.tools.phing.drush.repository.revision}" />
      </then>
    </if>

    <!-- Register as custom Phing task -->
    <taskdef name="drush" classname="DrushTask"
             classpath="${build.tools.phing.drush.dir}" />

    <!-- Run drush from the project Drupal directory -->
    <!--
    <property name="drush.root" value="${project.drupal.dir}"/>
    -->
  </target>

  <!-- Setup composer so that we can use it to install stuff. -->
  <target name="setup-composer" depends="init, internal:setup-dirs">
     <property name="build.tools.composer" value="${build.tools.dir}/composer.phar" />

     <if>
       <not>
         <available file="${build.tools.composer}"/>
       </not>
       <then>
         <php expression="$argv = array('--install-dir', '${build.tools.dir}'); eval('?>'.file_get_contents('https://getcomposer.org/installer'))" />
       </then>
     </if>
  </target>

  <!-- Performs all the internal setup necessary to run all normal tasks. -->
  <target name="init" depends="internal:load-properties" hidden="true">
  </target>

  <!-- Loads the build.properties with the correct defaults set. -->
  <target name="internal:load-properties" hidden="true">
    <!-- Make an alias to our internal build dir that's easier to type. -->
    <property name="internal.build.dir" value="${phing.dir.phingdrupaldistributions}" />

    <!-- First load the defaults. -->
    <property file="${internal.build.dir}/build.default.properties" override="true"/>

    <!-- Next, load the local properties. -->
    <property file="${phing.dir}/build.properties" override="true"/>
  </target>

  <!-- Sets up the build artifacts directory so that we can put things there. -->
  <target name="internal:setup-dirs" depends="internal:load-properties" hidden="true">
    <property name="build.tools.dir" value="${build.artifacts.dir}/tools"/>

    <mkdir dir="${build.artifacts.dir}"/>
    <mkdir dir="${build.tools.dir}"/>
  </target>
</project>
